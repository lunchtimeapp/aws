const MongoClient = require('mongodb').MongoClient;

/**
 * Handler for ‘Pre Token Generation’ Lambda trigger in a Cognito User Pool.
 * 
 * Tries to retrieve the user from the application database based on the login identity to access its `uid`.
 * If the user is not found, a new user record is created with a new unique `uid`.
 * The `uid` is then added as a claim to the tokens generated by Cognito.
 * 
 * @param {Object} event - API Gateway Lambda Proxy Input Format
 * @param {Object} context
 * @returns {Object} API Gateway Lambda Proxy Output Format
 * 
 * @see {@link https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html Doc}
 * @see {@link https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format Event doc}
 * @see {@link https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html Context doc}
 * @see {@link https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html Return doc}
 */
exports.lambdaHandler = async (event, context) => {

  console.log(MongoClient.name);
  console.log(event);

  // Test overriding tokens.
  event.response = {
    claimsOverrideDetails: {
      claimsToAddOrOverride: {
        uid: 'TODO'
      },
      claimsToSuppress: [
        'email_verified',
        'cognito:groups'
      ]
    }
  };
  return event;
}